<!DOCTYPE html>
<html>
    <head>
        <script src="https://ajax.googleapis.com/ajax/libs/shaka-player/4.3.8/shaka-player.ui.js"></script>
        <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/shaka-player/4.3.8/controls.css">
        <title>DASH Player</title>
    </head>
    <body>
        <h1>DASH Player</h1>
        <h2><?VIDEO_NAME?></h2>
        <div data-shaka-player-container style="max-width:40em"
            data-shaka-player-cast-receiver-id="8D8C71A7">
            <video autoplay data-shaka-player id="video" style="width:100%;height:100%"></video>
        </div>
        <a href="/">Home</a>
        <a href="/video/">Video List</a>
        <script>
            const manifestUri = <?MPD_PATH?>;

            async function init() {
            // When using the UI, the player is made automatically by the UI object.
            const video = document.getElementById('video');
            const ui = video['ui'];
            const controls = ui.getControls();
            const player = controls.getPlayer();

            video.volume = 0.20;

            // Attach player and ui to the window to make it easy to access in the JS console.
            window.player = player;
            window.ui = ui;

            const config = {
                'seekBarColors': {
                base: 'rgba(255, 255, 255, 0.3)',
                buffered: 'rgba(255, 255, 255, 0.54)',
                played: 'rgb(255, 0, 0)'
                },
                'overflowMenuButtons' : ['cast', 'quality', 'playback_rate']
            }
            ui.configure(config);
            
            // Listen for error events.
            player.addEventListener('error', onPlayerErrorEvent);
            controls.addEventListener('error', onUIErrorEvent);

            // Try to load a manifest.
            // This is an asynchronous process.
            try {
                await player.load(manifestUri);
                // This runs if the asynchronous load is successful.
                console.log('The video has now been loaded!');
            } catch (error) {
                onPlayerError(error);
            }
            }

            function onPlayerErrorEvent(errorEvent) {
            // Extract the shaka.util.Error object from the event.
            onPlayerError(event.detail);
            }

            function onPlayerError(error) {
            // Handle player error
            console.error('Error code', error.code, 'object', error);
            }

            function onUIErrorEvent(errorEvent) {
            // Extract the shaka.util.Error object from the event.
            onPlayerError(event.detail);
            }

            function initFailed(errorEvent) {
            // Handle the failure to load; errorEvent.detail.reasonCode has a
            // shaka.ui.FailReasonCode describing why.
            console.error('Unable to load the UI library!');
            }

            // Listen to the custom shaka-ui-loaded event, to wait until the UI is loaded.
            document.addEventListener('shaka-ui-loaded', init);
            // Listen to the custom shaka-ui-load-failed event, in case Shaka Player fails
            // to load (e.g. due to lack of browser support).
            document.addEventListener('shaka-ui-load-failed', initFailed);
        </script>
    </body>
</html>